func main(var argc: i64 #* , var argv: vec *#)->i32{
    let hoge: i32 = 42;
    var fuga: i32 = 5;
    var piyo: i32 = hoge + fuga * 2;
    var hogehoge: f64;
    hogehoge=piyo;
    println(piyo);
    println(hogehoge);
    if(piyo == 52){
        println("true");
    }else{
        println("false");
    }
    # hogehoge=print("");
    println(print(""));#現状nilを得る手段がvoid関数しかない
    assert (+10) == 10;
    println(-10);
    assert (+-10) == (-10);
    assert (-+10) == (-10);
    assert (-10+10) == 0;
    assert (10- -10) == 20;
    assert (+3.14) == 3.14;
    println(-3.14);
    assert (+-3.14) == (-3.14);
    assert (-+3.14) == (-3.14);
    assert (-3.14+3.14) == 0;
    println(3.14- -3.14);
    # assert 1 == 2, "then, everything is the same";
    fizzbuzz(31);
    return 0;
}

func hello_world()->void{
    println("Hello, world!");
}

func fizzbuzz(let n:i64)->void{
    println("for version");
    for(var i:i64 = 0;i<n;i+=1){
        if(i%15==0){
            println("fizzbuzz");
        }elif(i%3 == 0){
            println("fizz");
        }elif(i%5 == 0){
            println("buzz");
        }else{
            println(i);
        }
    }

    println("desugared for version");
    {
        var i:i64 = 0;
        loop{
            if(not (i < n)){
                break;
            }
            {
                if(i%15==0){
                    println("fizzbuzz");
                }elif(i%3 == 0){
                    println("fizz");
                }elif(i%5 == 0){
                    println("buzz");
                }else{
                    println(i);
                }
            }
            i+=1;
        }
    }
}
